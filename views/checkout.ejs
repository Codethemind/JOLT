<%- include('./partial/header') %>
<%- include('./partial/navbar')  %>



<div class="billing">

  <!-- ------------------breadcrumbs starts----------------- -->
<div class="container">
  <ol class="breadcrumb breadcrumb-arrow mb-4">
      <li class="breadcrumb-item"><a href="/user">Home</a></li>
      <li class="breadcrumb-item"><a href="/api/cart/">Cart</a></li>
      <li class="breadcrumb-item active" aria-current="page">
          <span>Checkout</span>
      </li>
  </ol>
</div>
<!-- ------------------breadcrumbs ends----------------- -->


    <section class="bg-light py-5">
      <div class="container">
        <div class="row">
            <div class="col-xl-8 col-lg-8 mb-4">
                <div class="billing-details">
                    <h4>Billing Details</h4>
                    <form id="billing-form" action="/api/cart/order" method="POST">
                        <div class="form-group">
                            <label>Select a saved address</label>
                            <select id="savedAddresses" name="addressId" class="form-control" required>
                                <option disabled selected value=''>Select a saved address</option>
                                <% if(address && address.length > 0) { %>
                                    <% address.forEach((element) => { %>
                                        <option value="<%= element._id %>">
                                            <%= element.fullName %> - <%= element.streetAddress %>, <%= element.city %>
                                        </option>
                                    <% }) %>
                                <% } else { %>
                                    <option value="">No address... Add your address</option>
                                <% } %>
                            </select>
                        </div>
                    </form>
    
                    <!-- Checkout -->
    
                    <div class="card shadow-0 border">
                        <div class="p-4">
                            <hr class="my-4" />
                            <h5 class="card-title mb-3">Add address</h5>
    
                            <form id="addAddressForm">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <p class="mb-0">Name</p>
                                        <div class="form-outline">
                                            <input type="text" id="typeText" placeholder="Type here" name="fullName" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <p class="mb-0">Phone</p>
                                        <div class="form-outline">
                                            <input type="text" id="typeText" placeholder="Type here" name="phone" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-sm-12 mb-3 mt-3">
                                        <p class="mb-0">Street Address</p>
                                        <div class="form-outline">
                                            <input type="text" id="typeText" placeholder="Type here" name="address" class="form-control" />
                                        </div>
                                    </div>
    
                                    <div class="col-sm-3 mb-3">
                                        <p class="mb-0">Zipcode</p>
                                        <div class="form-outline">
                                            <input type="text" id="typeText" name="zipCode" class="form-control" />
                                        </div>
                                    </div>
    
                                    <div class="col-sm-3 col-6 mb-3">
                                        <p class="mb-0">City</p>
                                        <div class="form-outline">
                                            <input type="text" id="typeText" name="city" class="form-control" />
                                        </div>
                                    </div>
    
                                    <div class="col-sm-3 col-6 mb-3">
                                        <p class="mb-0">State</p>
                                        <div class="form-outline">
                                            <input type="text" id="typeText" name="state" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-6 mb-3">
                                        <p class="mb-0">Country</p>
                                        <div class="form-outline">
                                            <input type="text" id="typeText" name="country" class="form-control" />
                                        </div>
                                    </div>
                                </div>
    
                                <div class="float-end">
                                    <a onclick="addAddress()" class="btn btn-outline-dark shadow-0 border">Add</a>
                                </div>
                            </form>
                        </div>
                    </div>
                    <!-- Checkout -->
                </div>
            </div>
            
            <div class="col-xl-4 col-lg-4 d-flex justify-content-center justify-content-lg-end">
                <div class="ms-lg-4 mt-4 mt-lg-0" style="max-width: 320px;">
                    <h6 class="mb-3">Summary</h6>
            
                 <!-- Total price section -->
<div class="d-flex justify-content-between">
    <p class="mb-2">Total price:</p>
    <p class="mb-2 total-price">₹<%= cart ? cart.total_price : 0 %></p>
</div>

<!-- Discount section -->
<div class="d-flex justify-content-between">
    <p class="mb-2">Discount:</p>
    <p class="mb-2 text-danger discount-price">₹0.0</p>
</div>

<!-- Shipping cost section -->
<div class="d-flex justify-content-between">
    <p class="mb-2">Shipping cost:</p>
    <p class="mb-2 shipping-cost">₹<%= cart && cart.total_price >= 2000 ? 0 : 40 %></p>
</div>

<!-- Final price after discount -->
<hr />
<div class="d-flex justify-content-between">
    <p class="mb-2">Final price:</p>
    <p class="mb-2 fw-bold final-price">₹<%= cart ? (cart.total_price >= 2000 ? cart.total_price : cart.total_price + 40) : 0 %></p>
</div>


            
                    <!-- Hidden field for cart ID -->
                    <input type="hidden" name="cartId" id="cartId" value="<%= cart ? cart._id : '' %>">
            
                    <!-- Payment method section -->
                 <!-- Payment method section -->
<div class="form-group mt-4">
    <label>Payment Method</label>
    <div>
        <label>
            <input type="radio" name="paymentMethod" value="Cash on Delivery" id="codOption" required> Cash on Delivery
        </label>
        <label>
            <input type="radio" name="paymentMethod" value="Bank Transfer"> Bank Transfer
        </label>
    </div>
    <p id="codDisabledMessage" class="text-danger" style="display: none;">Cash on Delivery is not available for orders above ₹1000.</p>
</div>

            
                    <!-- Promo code section -->
                    <div class="input-group mt-5 mb-4">
                        <input type="text" id="promoCode" class="form-control border" placeholder="Promo code">
                        <button class="btn btn-light text-primary border" onclick="applyCoupon()">Apply</button>
                    </div>
            
                    <!-- Applied Coupon Section -->
                    <div id="appliedCouponSection" style="display: none;">
                        <p>Applied Coupon: <span id="appliedCouponCode"></span></p>
                        <p>Discount: ₹<span id="discountAmount"></span></p>
                        <button class="btn btn-sm btn-danger" onclick="removeCoupon()">Remove Coupon</button>
                    </div>
            
                    <!-- Buttons -->
                    <div class="float-end">
                        <a href="/cart" class="btn btn-light border">Cancel</a>
                        <button class="btn btn-success shadow-0 border" onclick="placeOrder()">Place Order</button>
                    </div>
            
                    <!-- Items in cart section -->
                    <hr />
                    <h6 class="text-dark my-4">Items in cart</h6>
            
                    <% if (cart && cart.items.length > 0) { %>
                        <% cart.items.forEach((element) => { %>
                            <div class="d-flex align-items-center mb-4">
                                <% const variant = element.product.variants.find(v => v._id.toString() === element.variantId); %>
                                <div class="me-3 position-relative">
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill badge-secondary">
                                        <%= element.quantity %>
                                    </span>
                                    <img src="/<%= variant.images[0] %>" style="height: 96px; width: 96px;" class="img-sm rounded border" />
                                </div>
                                <div>
                                    <a href="#" class="nav-link">
                                        <%= element.product.product_name %><br />
                                        <%= variant.color %> color
                                    </a>
                                    <% 
                                        const itemPrice = variant.offer && variant.offer.offerPercentage 
                                            ? variant.discount_price 
                                            : variant.price; 
                                    %>
                                    <div>Total: ₹<%= itemPrice * element.quantity %></div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <h6 class="text-danger my-4">No items in cart</h6>
                    <% } %>
                </div>
            </div>
            
        </div>
    </div>
    
    </section>
  </div>




  <footer class="footer">
    <div class="footer-middle">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 col-lg-3">
                    <div class="widget widget-about">
                        <img src="/images/demos/demo-4/logo.png" class="footer-logo" alt="Footer Logo" width="105"
                            height="25">
                        <p>Praesent dapibus, neque id cursus ucibus, tortor neque egestas augue, eu vulputate magna
                            eros eu erat. </p>

                        <div class="social-icons">
                            <a href="#" class="social-icon" target="_blank" title="Facebook"><i
                                    class="icon-facebook-f"></i></a>
                            <a href="#" class="social-icon" target="_blank" title="Twitter"><i
                                    class="icon-twitter"></i></a>
                            <a href="#" class="social-icon" target="_blank" title="Instagram"><i
                                    class="icon-instagram"></i></a>
                            <a href="#" class="social-icon" target="_blank" title="Youtube"><i
                                    class="icon-youtube"></i></a>
                            <a href="#" class="social-icon" target="_blank" title="Pinterest"><i
                                    class="icon-pinterest"></i></a>
                        </div><!-- End .soial-icons -->
                    </div><!-- End .widget about-widget -->
                </div><!-- End .col-sm-6 col-lg-3 -->

                <div class="col-sm-6 col-lg-3">
                    <div class="widget">
                        <h4 class="widget-title">Useful Links</h4><!-- End .widget-title -->

                        <ul class="widget-list">
                            <li><a href="about.html">About JOLT</a></li>
                            <li><a href="#">How to shop on JOLT</a></li>
                            <li><a href="#">FAQ</a></li>
                            <li><a href="contact.html">Contact us</a></li>
                            <li><a href="login.html">Log in</a></li>
                        </ul><!-- End .widget-list -->
                    </div><!-- End .widget -->
                </div><!-- End .col-sm-6 col-lg-3 -->

                <div class="col-sm-6 col-lg-3">
                    <div class="widget">
                        <h4 class="widget-title">Customer Service</h4><!-- End .widget-title -->

                        <ul class="widget-list">
                            <li><a href="#">Payment Methods</a></li>
                            <li><a href="#">Money-back guarantee!</a></li>
                            <li><a href="#">Returns</a></li>
                            <li><a href="#">Shipping</a></li>
                            <li><a href="#">Terms and conditions</a></li>
                            <li><a href="#">Privacy Policy</a></li>
                        </ul><!-- End .widget-list -->
                    </div><!-- End .widget -->
                </div><!-- End .col-sm-6 col-lg-3 -->

                <div class="col-sm-6 col-lg-3">
                    <div class="widget">
                        <h4 class="widget-title">My Account</h4><!-- End .widget-title -->

                        <ul class="widget-list">
                            <li><a href="#">Sign In</a></li>
                            <li><a href="cart.html">View Cart</a></li>
                            <li><a href="#">My Wishlist</a></li>
                            <li><a href="#">Track My Order</a></li>
                            <li><a href="#">Help</a></li>
                        </ul><!-- End .widget-list -->
                    </div><!-- End .widget -->
                </div><!-- End .col-sm-6 col-lg-3 -->
            </div><!-- End .row -->
        </div><!-- End .container -->
    </div><!-- End .footer-middle -->

    <div class="footer-bottom">
        <div class="container">
            <p class="footer-copyright">Copyright © 2019 Molla Store. All Rights Reserved.</p>
            <!-- End .footer-copyright -->
            <figure class="footer-payments">
                <img src="/images/payments.png" alt="Payment methods" width="272" height="20">
            </figure><!-- End .footer-payments -->
        </div><!-- End .container -->
    </div><!-- End .footer-bottom -->
</footer><!-- End .footer -->





  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

  <script>
async function addAddress() {
  const form = document.getElementById('addAddressForm');
  if (!form) {
    console.error('Form not found!');
    return;
  }

  
  const fullName = form.fullName.value.trim();
  const streetAddress = form.address.value.trim(); 
  const zipCode = form.zipCode.value.trim();
  const phone = form.phone.value.trim();
  const city = form.city.value.trim();
  const state = form.state.value.trim();
  const country = form.country.value.trim();

 
  if (!fullName) {
    Swal.fire({
      icon: 'warning',
      title: 'Validation Error',
      text: 'Full name is required.',
      confirmButtonText: 'OK',
    });
    return;
  }

  if (!streetAddress) {
    Swal.fire({
      icon: 'warning',
      title: 'Validation Error',
      text: 'Street address is required.',
      confirmButtonText: 'OK',
    });
    return;
  }

  if (!city) {
    Swal.fire({
      icon: 'warning',
      title: 'Validation Error',
      text: 'City is required.',
      confirmButtonText: 'OK',
    });
    return;
  }

  if (!state) {
    Swal.fire({
      icon: 'warning',
      title: 'Validation Error',
      text: 'State is required.',
      confirmButtonText: 'OK',
    });
    return;
  }

  if (!zipCode || !/^\d{5,6}$/.test(zipCode)) {
    Swal.fire({
      icon: 'warning',
      title: 'Validation Error',
      text: 'A valid zip code is required (5-6 digits).',
      confirmButtonText: 'OK',
    });
    return;
  }

  if (!country) {
    Swal.fire({
      icon: 'warning',
      title: 'Validation Error',
      text: 'Country is required.',
      confirmButtonText: 'OK',
    });
    return;
  }

  if (!phone || !/^\d{10}$/.test(phone)) {
    Swal.fire({
      icon: 'warning',
      title: 'Validation Error',
      text: 'A valid 10-digit phone number is required.',
      confirmButtonText: 'OK',
    });
    return;
  }

  
  try {
    const response = await fetch('/user/address/add', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        fullName,
        streetAddress, 
        zipCode,
        phone,
        city,
        state,
        country,
      }),
    });

    if (response.ok) {
      Swal.fire({
        icon: 'success',
        title: 'Address Added',
        text: 'The address has been successfully added.',
        confirmButtonText: 'OK',
      }).then(() => {
        location.reload(); 
      });
    } else {
      const data = await response.json(); 
      const errorMessage = data.message || 'Unable to add the address. Please try again later.';
      
      Swal.fire({
        icon: 'error',
        title: 'Failed to Add Address',
        text: errorMessage,
        confirmButtonText: 'OK',
      });
    }
  } catch (error) {
    console.error('Error:', error);
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'An error occurred while adding the address.',
      confirmButtonText: 'OK',
    });
  }
}
async function placeOrder() {
    try {
        const addressId = document.getElementById('savedAddresses').value;
        const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked')?.value;

        if (!addressId || !paymentMethod) {
            Swal.fire({
                icon: 'warning',
                title: 'Missing Information',
                text: 'Please select an address and payment method.',
                confirmButtonText: 'OK'
            });
            return;
        }

        const response = await fetch('/api/cart/order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ addressId, paymentMethod })
        });

        const orderData = await response.json();

        if (!response.ok) {
            console.error('Error response:', orderData);
            throw new Error(orderData.message || orderData.error || 'Unable to place order. Please try again later.');
        }

        if (paymentMethod === 'Bank Transfer') {
            var options = {
                key: '<%= process.env.RAZORPAY_KEY_ID %>',
                amount: orderData.razorpayOrder.amount,
                currency: orderData.razorpayOrder.currency,
                name: 'Your Company Name',
                description: 'Purchase Description',
                order_id: orderData.razorpayOrder.id,
                handler: function (response) {
                    verifyPayment(response);
                },
                prefill: {
                    name: 'Customer Name',
                    email: 'customer@example.com',
                    contact: 'Customer Phone Number'
                },
                theme: {
                    color: '#F37254'
                },
                modal: {
                    ondismiss: function() {
                       
                        handlePaymentFailure(orderData.razorpayOrder.id);
                    }
                }
            };
            const rzp = new Razorpay(options);
            rzp.open();
        } else {
            Swal.fire({
                icon: 'success',
                title: 'Order Placed',
                text: 'Your order has been successfully placed.',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.href = '/user/';
            });
        }
    } catch (error) {
        console.error('Error while placing order:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'An error occurred while placing the order. Please try again later.',
            confirmButtonText: 'OK'
        });
    }
}

function verifyPayment(response) {
   
    fetch('/payments/verify', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_order_id: response.razorpay_order_id,
            razorpay_signature: response.razorpay_signature
        })
    })
    .then(response => response.json())
    .then(data => {
        console.log('Verification response:', data);
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Payment Successful',
                text: 'Your order has been successfully placed and payment received.',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.href = '/user/';
            });
        } else {
            throw new Error(data.message || 'Payment verification failed');
        }
    })
    .catch(error => {
        console.error('Error verifying payment:', error);
        Swal.fire({
            icon: 'error',
            title: 'Payment Verification Failed',
            text: error.message || 'Unable to verify payment. Please contact support.',
            confirmButtonText: 'OK'
        });
    });
}

function handlePaymentFailure(razorpayOrderId) {
    console.log('Handling payment failure for order:', razorpayOrderId);
    fetch('/payments/payment-failure', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ razorpay_order_id: razorpayOrderId })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            console.log('Payment failure recorded');
            Swal.fire({
                icon: 'error',
                title: 'Payment Failed',
                text: 'Your payment was not successful. The order has been marked as failed.',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.href = '/user/orders'; // Redirect to orders page or appropriate location
            });
        } else {
            console.error('Failed to record payment failure');
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while processing your payment failure. Please contact support.',
                confirmButtonText: 'OK'
            });
        }
    })
    .catch(error => {
        console.error('Error handling payment failure:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while processing your payment failure. Please contact support.',
            confirmButtonText: 'OK'
        });
    });
}
async function applyCoupon() {
    const promoCode = document.getElementById('promoCode').value.trim();
    const cartId = document.getElementById('cartId').value;

    if (!promoCode) {
        Swal.fire({
            icon: 'warning',
            title: 'Validation Error',
            text: 'Please enter a promo code.',
            confirmButtonText: 'OK',
        });
        return;
    }

    try {
        const response = await fetch('/api/cart/apply-coupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ couponCode: promoCode, cartId })
        });

        const data = await response.json();

        if (response.ok) {
            updatePriceDisplay(data.newTotalPrice, data.discountAmount, data.originalPrice);
            displayAppliedCoupon(promoCode, data.discountAmount);
            Swal.fire({
                icon: 'success',
                title: 'Coupon Applied',
                text: data.message,
                confirmButtonText: 'OK',
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Coupon Error',
                text: data.message,
                confirmButtonText: 'OK',
            });
        }
    } catch (error) {
        console.error('Error applying coupon:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while applying the coupon. Please try again later.',
            confirmButtonText: 'OK',
        });
    }
}

async function removeCoupon() {
    const cartId = document.getElementById('cartId').value;

    try {
        const response = await fetch('/api/cart/remove-coupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ cartId })
        });

        const data = await response.json();

        if (response.ok) {
            updatePriceDisplay(data.newTotalPrice, 0, data.newTotalPrice);
            hideAppliedCoupon();
            Swal.fire({
                icon: 'success',
                title: 'Coupon Removed',
                text: data.message,
                confirmButtonText: 'OK',
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message,
                confirmButtonText: 'OK',
            });
        }
    } catch (error) {
        console.error('Error removing coupon:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while removing the coupon. Please try again later.',
            confirmButtonText: 'OK',
        });
    }
}

function updatePriceDisplay(newTotalPrice, discountAmount, originalPrice) {
    const totalPriceElement = document.querySelector('.total-price');
    const discountElement = document.querySelector('.discount-price');
    const finalPriceElement = document.querySelector('.final-price');

    if (totalPriceElement && discountElement && finalPriceElement) {
        totalPriceElement.innerText = `₹${originalPrice.toFixed(2)}`;
        discountElement.innerText = `₹${discountAmount.toFixed(2)}`;
        finalPriceElement.innerText = `₹${newTotalPrice.toFixed(2)}`;
    }
}

function displayAppliedCoupon(couponCode, discountAmount) {
    const appliedCouponSection = document.getElementById('appliedCouponSection');
    const appliedCouponCode = document.getElementById('appliedCouponCode');
    const discountAmountSpan = document.getElementById('discountAmount');

    appliedCouponCode.textContent = couponCode;
    discountAmountSpan.textContent = discountAmount.toFixed(2);
    appliedCouponSection.style.display = 'block';
    document.getElementById('promoCode').disabled = true;
}

function hideAppliedCoupon() {
    const appliedCouponSection = document.getElementById('appliedCouponSection');
    appliedCouponSection.style.display = 'none';
    document.getElementById('promoCode').disabled = false;
    document.getElementById('promoCode').value = '';
}

document.addEventListener("DOMContentLoaded", function() {
    const totalPrice = parseFloat(document.querySelector('.total-price').textContent.replace('₹', ''));
    const codOption = document.getElementById('codOption');
    const codMessage = document.getElementById('codDisabledMessage');

    if (totalPrice > 1000) {
        codOption.disabled = true;
        codOption.parentElement.classList.add('text-muted');
        codMessage.style.display = 'block'; // Show the message when COD is disabled
    }
});

// Add this function to your existing script tag
function retryPayment(orderId) {
    if (!confirm('Are you sure you want to retry the payment for this order?')) {
        return;
    }

    const retryButton = document.querySelector(`button[onclick="retryPayment('${orderId}')"]`);
    retryButton.disabled = true;
    retryButton.innerHTML = '<i class="bi bi-arrow-repeat"></i> Retrying...';

    fetch(`/payments/retry-payment/${orderId}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        }
    })
    .then(response => response.json())
    .then(data => {
        retryButton.disabled = false;
        retryButton.innerHTML = '<i class="bi bi-arrow-repeat"></i> Retry';

        if (data.success) {
            const options = {
                key: '<%= process.env.RAZORPAY_KEY_ID %>',
                amount: data.order.totalAmount * 100,
                currency: 'INR',
                name: 'Your Company Name',
                description: 'Payment for Order ' + orderId,
                order_id: data.razorpayOrderId,
                handler: function (response) {
                    verifyPayment(response);
                },
                prefill: {
                    name: data.customerName,
                    email: data.customerEmail,
                    contact: data.customerPhone,
                },
                theme: {
                    color: "#3399cc"
                },
                modal: {
                    ondismiss: function() {
                  
                        handlePaymentFailure(data.razorpayOrderId);
                    }
                }
            };

            const razorpayInstance = new Razorpay(options);
            razorpayInstance.open();
        } else {
            alert(`Payment retry failed: ${data.message}`);
        }
    })
    .catch(error => {
        console.error('Error retrying payment:', error);
        alert('An error occurred while retrying the payment. Please try again.');
        retryButton.disabled = false;
        retryButton.innerHTML = '<i class="bi bi-arrow-repeat"></i> Retry';
    });
}
 </script>
    <%- include('./partial/footer') %>















