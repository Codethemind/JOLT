<%- include('./partial/admin_header') %>

            <div class="container-fluid">
                <div class="row">
            <!-- Main Content -->
            <main role="main" class="col-md-10 content">
                <div class="container">
                    <h2 class="text-center ">Product Management</h2>
                    
                    <!-- Add Product Button -->
                    <div class="mb-3">
                        <a class="btn btn-primary" href="/admin/admin_addproduct">Add Product</a>
                    </div>
                    
                    <!-- Product Table -->
                  <!-- Product Table -->
<table class="table table-striped table-hover mt-5">
    <thead>
        <tr>
            <th scope="col">Sl</th>
            <th scope="col">Image</th>
            <th scope="col">Product Name</th>
            <th scope="col">Category</th>
            <th scope="col">Brand</th>
            <th scope="col">Stock</th>
            <th scope="col">Price</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        <% if (typeof products != 'undefined' && products.length > 0) { %>
            <% products.forEach((product, index) => { %>
            <tr>
                <th scope="row"><%= (currentPage - 1) * 5 + index + 1 %></th>
                <td><img src="/<%= product.variants[0].images[0] %>" style="width: 45px; height: 45px; object-fit: cover;" class="img-fluid" alt="icon"></td>
                <td><%= product.product_name %></td>
                <td><%= product.category_id.name %></td>
                <td><%= product.brand_id.brand_name %></td>
                <td class="<%= product.variants[0].stock > 0 ? 'text-success' : 'text-danger' %>">
                    <%= product.variants[0].stock > 0 ? `${product.variants[0].stock} In Stock` : 'Out of Stock' %>
                </td>
                <td><%= product.variants[0].price %></td>
                <td>
                    <% if (product.isDelete) { %>
                        <button class="btn btn-primary btn-sm" onclick="restoreCategory('<%= product._id %>')">
                            <i class="fas fa-recycle"></i> Restore
                        </button>
                    <% } else { %>
                        <button class="btn btn-warning btn-sm" onclick="window.location.href='/admin/editproduct/<%= product._id %>'">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        
                        <button class="btn btn-danger btn-sm" onclick="deleteCategory('<%= product._id %>')">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    <% } %>
                </td>
            </tr>
            <% }) %>
        <% } else { %>
            <tr>
                <td colspan="9" class="text-center">No products available</td>
            </tr>
        <% } %>
    </tbody>
</table>

<!-- Pagination -->
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <% if (currentPage > 1) { %>
            <li class="page-item">
                <a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
            </li>
        <% } else { %>
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>
        <% } %>

        <% for (let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
            </li>
        <% } %>

        <% if (currentPage < totalPages) { %>
            <li class="page-item">
                <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
            </li>
        <% } else { %>
            <li class="page-item disabled">
                <span class="page-link">Next</span>
            </li>
        <% } %>
    </ul>
</nav>

                </div>
            </main>
        </div>
    </div>

    <script>
       

       function deleteCategory(categoryId) {
    // Show SweetAlert confirmation dialog
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            // Proceed with the deletion if confirmed
            fetch(`/admin/delete-product/${categoryId}`, {
                method: 'PUT'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Deleted!',
                        text: 'Category has been deleted successfully.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        location.reload();  // Reload the page after successful deletion
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to delete category.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch(error => {
                console.error('Error deleting category:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An unexpected error occurred.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            });
        }
    });
}

function restoreCategory(categoryId) {
    // Show SweetAlert confirmation dialog
    Swal.fire({
        title: 'Are you sure?',
        text: "Do you want to restore this category?",
        icon: 'info',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, restore it!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            // Proceed with the restoration if confirmed
            fetch(`/admin/restore-product/${categoryId}`, {
                method: 'PUT'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Restored!',
                        text: 'Category has been restored successfully.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        location.reload();  // Reload the page after successful restoration
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to restore category.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch(error => {
                console.error('Error restoring category:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An unexpected error occurred.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            });
        }
    });
}
 


    </script>

    <!-- JavaScript dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</body>
</html>
