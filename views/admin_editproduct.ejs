<%- include('./partial/admin_header') %>
    <!-- Main Content -->
    <main class="content">
      <h1 class="mt-5">Edit Product</h1>
     

      <form id="product-form" data-product-id="<%= product._id %>" enctype="multipart/form-data">
          <h2>Edit Product: <%= product.product_name %></h2>
  
          <!-- Product Name -->
          <div class="form-group">
              <label for="product_name_<%= product._id %>">Product Name:</label>
              <input type="text" class="form-control" id="product_name_<%= product._id %>" name="product_name" value="<%= product.product_name %>" required>
          </div>
  
          <!-- Product Highlights -->
          <div class="form-group">
              <label for="product_highlights_<%= product._id %>">Product Highlights:</label>
              <input type="text" class="form-control" id="product_highlights_<%= product._id %>" name="product_highlights" value="<%= product.product_highlights %>" required>
          </div>
  
          <!-- Product Description -->
          <div class="form-group">
              <label for="product_description_<%= product._id %>">Product Description:</label>
              <textarea class="form-control" id="product_description_<%= product._id %>" name="product_description" rows="4" required><%= product.product_description %></textarea>
          </div>
  
          <!-- Variants Section -->
          <h3 class="mt-4">Variants</h3>
          <div id="variants-container_<%= product._id %>" class="variants-container">
              <% product.variants.forEach(function(variant, index) { %>
              <div class="variant mb-4 p-3 border rounded" data-product-id="<%= product._id %>" data-index="<%= index %>">
                  
                  <!-- Grid Row for Price, Size, Stock, and Color -->
                  <div class="form-row">
                      <div class="col-md-3">
                          <label for="price_<%= product._id %>_<%= index %>">Price:</label>
                          <input type="number" class="form-control" id="price_<%= product._id %>_<%= index %>" name="variants[<%= index %>][price]" value="<%= variant.price %>" required>
                      </div>
                      <div class="col-md-3">
                          <label for="size_<%= product._id %>_<%= index %>">Size:</label>
                          <input type="text" class="form-control" id="size_<%= product._id %>_<%= index %>" name="variants[<%= index %>][size]" value="<%= variant.size %>" required>
                      </div>
                      <div class="col-md-3">
                          <label for="stock_<%= product._id %>_<%= index %>">Stock:</label>
                          <input type="number" class="form-control" id="stock_<%= product._id %>_<%= index %>" name="variants[<%= index %>][stock]" value="<%= variant.stock %>" required>
                      </div>
                      <div class="col-md-3">
                          <label for="color_<%= product._id %>_<%= index %>">Color:</label>
                          <input type="text" class="form-control" id="color_<%= product._id %>_<%= index %>" name="variants[<%= index %>][color]" value="<%= variant.color %>" required>
                      </div>
                  </div>
  
                  <!-- Grid Row for Images -->
                  <div class="form-row mt-3">
                      <% for (let i = 0; i < 4; i++) { %>
                      <div class="col-sm-6 mb-3">
                          <div class="image-placeholder">
                              <img src="/<%= variant.images[i] ? variant.images[i] : '/images/upload_image.jpg' %>" style="height: 150px;" alt="placeholder" class="img-fluid" id="variant<%= index + 1 %>-image<%= i + 1 %>-preview">
                              <input type="file" class="form-control mt-2" name="variant_images_<%= index + 1 %>[]" id="variant<%= index + 1 %>-image<%= i + 1 %>" onchange="previewImage(this, 'variant<%= index + 1 %>-image<%= i + 1 %>-preview')">
                              <button type="button" class="btn btn-secondary mt-2" onclick="openCropperModal('variant<%= index + 1 %>-image<%= i + 1 %>-preview', 'variant<%= index + 1 %>-image<%= i + 1 %>')">Crop Image</button>
                          </div>
                      </div>
                      <% } %>
                  </div>
  
              
                  
                  <hr>
              </div>
              <% }); %>
          </div>
  
          <!-- Add Variant Button -->
          <div id="variants-container">
              <button type="button" id="add-variant-btn" class="btn btn-primary mt-3">Add Variant</button>
          </div>
  
          <br>
          <button type="submit" class="btn btn-success"><i class="fas fa-edit" id="update-product-btn"></i> Update Product</button>
        </form>
  </main>
  
 <!-- Cropper Modal -->
 <div class="modal fade" id="cropperModal" tabindex="-1" role="dialog" aria-labelledby="cropperModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="cropperModalLabel">Crop Image</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <img id="image-to-crop" src="" alt="Image to crop">
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" id="cancel-crop-btn">Cancel</button>
        <button type="button" class="btn btn-primary" id="crop-btn">Save</button>
      </div>
    </div>
  </div>
</div>


    <!-- jQuery, Bootstrap JS, and Cropper.js JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://unpkg.com/cropperjs@1.5.12/dist/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      let cropper;
      let currentPreviewId = '';
      let currentFileInputId = '';
  
      function previewImage(input, previewId) {
        const preview = document.getElementById(previewId);
        const file = input.files[0];
        const reader = new FileReader();
  
        reader.onload = function(e) {
          preview.src = e.target.result;
        };
  
        if (file) {
          reader.readAsDataURL(file);
        }
      }
  
      function openCropperModal(previewId, fileInputId) {
        const previewImageSrc = document.getElementById(previewId).src;
        const cropperModalElement = document.getElementById('cropperModal');
  
        document.getElementById('image-to-crop').src = previewImageSrc;
  
        // Make sure the image is fully loaded before initializing Cropper
        document.getElementById('image-to-crop').onload = function() {
          if (cropper) {
            cropper.destroy(); // Destroy previous cropper instance if it exists
          }
  
          cropper = new Cropper(document.getElementById('image-to-crop'), {
            aspectRatio: 1,
            viewMode: 1,
          });
        };
  
        $('#cropperModal').modal('show'); // Show modal
  
        currentPreviewId = previewId;
        currentFileInputId = fileInputId;
      }
  
      document.getElementById('crop-btn').addEventListener('click', () => {
        if (!cropper) {
          console.error('Cropper is not initialized.');
          return;
        }
  
        const canvas = cropper.getCroppedCanvas();
        const croppedImage = canvas.toDataURL();
        const preview = document.getElementById(currentPreviewId);
        const fileInput = document.getElementById(currentFileInputId);
  
        preview.src = croppedImage;
  
        canvas.toBlob((blob) => {
          const file = new File([blob], 'cropped.png', { type: 'image/png' });
          const dataTransfer = new DataTransfer();
          dataTransfer.items.add(file);
          fileInput.files = dataTransfer.files;
        });
  
        $('#cropperModal').modal('hide');
  
        cropper.destroy();
        cropper = null; // Clear the cropper instance
      });
  
      document.getElementById('cancel-crop-btn').addEventListener('click', () => {
        $('#cropperModal').modal('hide');
  
        if (cropper) {
          cropper.destroy();
          cropper = null; // Clear the cropper instance
        }
      });
      document.addEventListener('DOMContentLoaded', function() {
  // Ensure the variant container exists
  const variantSection = document.getElementById('variants-container');

  if (!variantSection) {
    console.error('Variant container not found.');
    return;
  }

  // Add variant button functionality
  document.getElementById('add-variant-btn').addEventListener('click', () => {
    const variantIndex = document.querySelectorAll('.variant').length;

    const variantTemplate = `
      <div class="variant row mt-4" data-product-id="example-product-id" data-index="${variantIndex}">
        
        <!-- Grid for Price, Size, Stock, and Color (4 columns) -->
        <div class="col-3">
          <label for="price_${variantIndex}">Price:</label>
          <input type="number" class="form-control" id="price_${variantIndex}" name="variants[${variantIndex}][price]" value="" required>
        </div>
        
        <div class="col-3">
          <label for="size_${variantIndex}">Size:</label>
          <input type="text" class="form-control" id="size_${variantIndex}" name="variants[${variantIndex}][size]" value="" required>
        </div>
        
        <div class="col-3">
          <label for="stock_${variantIndex}">Stock:</label>
          <input type="number" class="form-control" id="stock_${variantIndex}" name="variants[${variantIndex}][stock]" value="" required>
        </div>
        
        <div class="col-3">
          <label for="color_${variantIndex}">Color:</label>
          <input type="text" class="form-control" id="color_${variantIndex}" name="variants[${variantIndex}][color]" value="" required>
        </div>

        <!-- Image Upload Section -->
        <div class="col-md-12 mt-3">
          <label for="productImage-${variantIndex}" class="form-label">Upload Images</label>
          <div class="row">
            ${[1, 2, 3, 4].map(i => `
              <div class="col-md-6">
                <img src="/images/cloud-computing.png" style="height: 150px;" alt="Image Preview" id="preview-${variantIndex}-${i}" class="image-preview">
                <input class="form-control image-form mt-2" type="file" name="productImage[${variantIndex}][${i}]" id="productImage-${variantIndex}-${i}" 
                  onchange="previewImage(this, 'preview-${variantIndex}-${i}')">
                <button type="button" class="btn btn-outline-danger mt-2" onclick="openCroppingModal('preview-${variantIndex}-${i}', 'productImage-${variantIndex}-${i}')">Crop Image</button>
              </div>
            `).join('')}
          </div>
        </div>

        <!-- Remove Variant Button -->
        <div class="col-12 text-end mt-3">
          <button type="button" class="remove-variant btn btn-danger">Remove Variant</button>
        </div>

        <hr class="mt-3">
      </div>
    `;

    variantSection.insertAdjacentHTML('beforeend', variantTemplate);

    // Attach Remove button functionality to the newly added variant
    document.querySelectorAll('.remove-variant').forEach((button, index) => {
      if (index === variantIndex) {
        button.addEventListener('click', () => {
          button.closest('.variant').remove();
        });
      }
    });
  });

  // Image preview function
  window.previewImage = function(input, previewId) {
    const file = input.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        document.getElementById(previewId).src = e.target.result;
      };
      reader.readAsDataURL(file);
    }
  };

  // Reuse the existing cropping modal for variants
  window.openCroppingModal = function(previewId, inputId) {
    // Assuming you have a generic cropping modal and logic
    // Call the existing modal logic with appropriate IDs
    console.log(`Open cropping modal for ${previewId} and ${inputId}`);
    // Add your logic to handle opening the cropping modal
    // and pass in the correct image and input IDs
  };
});





    // Remove variant functionality
    document.addEventListener('click', function(e) {
      if (e.target && e.target.classList.contains('remove-variant')) {
        const variantDiv = e.target.closest('.variant');
        if (variantDiv) {
          variantDiv.remove();
        }
      }
    });



// Update product button functionality
document.getElementById('product-form').addEventListener('submit', function(event) {
  event.preventDefault();
  const form = document.getElementById('product-form');
  const formData = new FormData(form);
  const productId = form.getAttribute('data-product-id'); // Ensure this ID is available

  fetch(`/admin/update-product/${productId}`, {
      method: 'POST',
      body: formData,
    })
    .then(response => response.json())
    .then(data => {
      if(data.success){
        Swal.fire({
          title: 'Success!',
          text: data.message,
          icon: 'success',
          confirmButtonText: 'OK'
        }).then(() => {
          window.location.href = '/admin/admin_productmanagment'; // Redirect after success
        });
      } else {
        Swal.fire({
          title: 'Error',
          text: 'Failed to update the product. Please try again.',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    })
    .catch(error => {
      console.error('Error updating product:', error);
      Swal.fire({
        title: 'Error',
        text: 'There was an error updating the product.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    });
});





  </script>
 
</body>

</html>
