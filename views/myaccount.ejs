<%- include('./partial/header') %>
	<%- include('./partial/navbar') %>

		<div class="page-wrapper">
			<main class="main">
				<div class="container">
					<div class="dashboard">
						<div class="row">
							<aside class="col-md-3">
								<ul class="nav nav-tabs flex-column mb-3" id="myTab" role="tablist">
									<li class="nav-item">
										<a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab"
											href="#dashboard" role="tab" aria-controls="dashboard"
											aria-selected="true">Dashboard</a>
									</li>
									<li class="nav-item">
										<a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders"
											role="tab" aria-controls="orders" aria-selected="false">Orders</a>
									</li>
									<li class="nav-item">
										<a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address"
											role="tab" aria-controls="address" aria-selected="false">Addresses</a>
									</li>
									<li class="nav-item">
										<a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#profile"
											role="tab" aria-controls="profile" aria-selected="false">Profile</a>
									</li>
									<li class="nav-item">
										<a class="nav-link" href="/logout">Sign Out</a>
									</li>
								</ul>
							</aside>

							<div class="col-md-9">
								<div class="tab-content" id="myTabContent">


									<div class="tab-pane fade show active" id="dashboard" role="tabpanel"
										aria-labelledby="dashboard-tab">
										<h2>Dashboard Content</h2>
										<p>Your dashboard information goes here.</p>
									</div>

									<div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
										<h2>Your Orders</h2>
										<% if (orders.length > 0) { %>
										  <table class="table">
											<thead class="text-center">
											  <tr>
												<th>Order ID</th>
												<th>Product Name</th> <!-- New column for Product Name -->
												<th>Status</th>
												<th>Total</th>
												<th>Action</th>
											  </tr>
											</thead>
											<tbody>
											  <% orders.forEach(order => { %>
												<!-- Single Order Row -->
												<tr>
												  <!-- Order ID -->
												  <td class="text-center"><%= order.orderId %></td>
									  
												  <!-- Product Name -->
												  <td class="text-center">
  <% order.items.forEach(item => { %>
    <a href="/user/product?id=<%= item.product._id %>">
      <%= item.product.product_name %>
    </a><br> <!-- Making the Product Name clickable -->
  <% }) %>
</td>

									  
												  <!-- Order Status -->
												  <td class="text-center">
													<button class="btn 
													<%= order.orderStatus === 'Pending' ? 'btn-outline-warning' : 
														 order.orderStatus === 'Processing' ? 'btn-outline-primary' : 
														 order.orderStatus === 'Shipped' ? 'btn-outline-info' : 
														 order.orderStatus === 'Delivered' ? 'btn-outline-success' : 
														 order.orderStatus === 'Cancelled' ? 'btn-outline-danger' : 
														 'btn-outline-secondary' %>" disabled>
													  <%= order.orderStatus %>
													</button>
												  </td>
									  
												  <!-- Total Amount -->
												  <td class="text-center">$<%= order.totalAmount.toFixed(2) %></td>
									  
												  <!-- Actions (Details Button) -->
												  <td class="text-center">
													<button class="btn btn-outline-secondary toggle-details-btn"
													  title="View Details" data-order-id="<%= order._id %>">
													  <i class="bi bi-info-circle-fill"></i>
													  <span class="ms-1">Details</span>
													</button>
												  </td>
												</tr>
									  
												<!-- Order Details Row (collapsible) -->
												<tr class="order-details-row" id="details-<%= order._id %>" style="display: none;">
												  <td colspan="5">
													<div class="order-details-container">
													  <h5>Order Details</h5>
													  <table class="table table-bordered text-center">
														<thead>
														  <tr>
															<th>Product Image</th>
															<th>Product Info</th>
															<th>Delivery Address</th>
														  </tr>
														</thead>
														<tbody>
														  <% order.items.forEach(item => { %>
															<tr>
															  <!-- Product Image -->
															  <td>
																<img src="/<%= item.product.variants[0].images[0] %>" alt="Product Image"
																  style="width: 150px; height: 180px; object-fit: cover;">
															  </td>
									  
															  <!-- Product Information -->
															  <td>
																<p><strong>Product:</strong> <%= item.product.product_name %></p>
																<p><strong>Color:</strong> <%= item.product.variants[0].color %></p>
																<p><strong>Size:</strong> <%= item.product.variants[0].size %></p>
																<p><strong>Quantity:</strong> <%= item.quantity %></p>
															  </td>
									  
															  <!-- Delivery Address -->
															  <td>
																<h5>Delivery Address</h5>
																<div class="address-info mt-3">
																  <p><strong><%= order.address.fullName %></strong></p>
																  <p><%= order.address.streetAddress %>, <%= order.address.city %></p>
																  <p>Phone number: <%= order.address.phone %></p>
																</div>
															  </td>
															</tr>
														  <% }) %>
														</tbody>
													  </table>
													</div>
												  </td>
												</tr>
											  <% }) %>
											</tbody>
										  </table>
										<% } else { %>
										  <p>No orders placed yet.</p>
										<% } %>
									  </div>
									  
									

									<div class="tab-pane fade" id="address" role="tabpanel"
										aria-labelledby="address-tab">
										<h2>Your Addresses</h2>
										<p>The following addresses will be used at checkout by default.</p>
										<button class="btn btn-primary" id="toggle-add-address">Add Address</button>

										<div class="row">
											<% if (addresses.length> 0) { %>
												<% addresses.forEach(address=> { %>
													<div class="col-lg-6">
														<div class="card card-dashboard">
															<div class="card-body">
																<h3 class="card-title">
																	<%= address.fullName %>
																</h3>
																<p>
																	<%= address.streetAddress %><br>
																		<%= address.city %>, <%= address.state %>
																				<%= address.zipCode %><br>
																					<%= address.country %><br>
																						<%= address.phone %><br>
																							<a href="#"
																								class="edit-address"
																								onclick="openEditModal('<%= address._id %>', '<%= JSON.stringify(address) %>')">Edit
																								<i
																									class="icon-edit"></i></a>
																							<button
																								class="btn btn-danger btn-sm"
																								onclick="deleteAddress('<%= address._id %>')">Delete</button>
																</p>
															</div>
														</div>
													</div>
													<% }) %>
														<% } else { %>
															<div class="col-lg-12">
																<div class="alert alert-warning" role="alert">
																	You have not added any addresses yet. <br>

																</div>
															</div>
															<% } %>
										</div>
									</div>

									<div class="tab-pane fade" id="profile" role="tabpanel"
										aria-labelledby="profile-tab">
										<h2>User Profile</h2>
										<div id="userProfile">
											<p><strong>Name:</strong> <span id="userName">
													<%= User.name %>
												</span></p>
											<p><strong>Email:</strong> <span id="userEmail">
													<%= User.email %>
												</span></p>
											<button id="openProfileModal" class="btn btn-primary">Edit Profile</button>
											<button id="changePasswordButton" class="btn btn-secondary"
												data-toggle="modal" data-target="#changePasswordModal">Change
												Password</button>
										</div>

										<!-- Edit Profile Modal -->
										<div class="modal fade" id="editProfileModal" tabindex="-1" role="dialog"
											aria-labelledby="editProfileModalLabel" aria-hidden="true">
											<div class="modal-dialog" role="document">
												<div class="modal-content">
													<div class="modal-header">
														<h5 class="modal-title" id="editProfileModalLabel">Edit Profile
														</h5>
														<button type="button" class="close" data-dismiss="modal"
															aria-label="Close">
															<span aria-hidden="true">&times;</span>
														</button>
													</div>
													<div class="modal-body">
														<form id="profileForm" class="form">
															<div class="form-group">
																<label class="pl-4" for="editName">Name</label>
																<input type="text" id="editName" class="form-control"
																	placeholder="Enter your name"
																	value="<%= User.name %>" required>
															</div>
															<div class="form-group">
																<label  class="pl-4" for="editEmail">Email</label>
																<input type="email" id="editEmail" class="form-control"
																	placeholder="Enter your email"
																	value="<%= User.email %>" required>
															</div>
														</form>
													</div>
													<div class="modal-footer">
														<button type="button" class="btn btn-secondary"
															data-dismiss="modal">Close</button>
														<button type="button" id="saveProfileChanges"
															class="btn btn-primary">Save Changes</button>
													</div>
												</div>
											</div>
										</div>

										<!-- Change Password Modal -->
										<div class="modal fade" id="changePasswordModal" tabindex="-1" role="dialog"
											aria-labelledby="changePasswordModalLabel" aria-hidden="true">
											<div class="modal-dialog" role="document">
												<div class="modal-content">
													<div class="modal-header">
														<h5 class="modal-title" id="changePasswordModalLabel">Change
															Password</h5>
														<button type="button" class="close" data-dismiss="modal"
															aria-label="Close">
															<span aria-hidden="true">&times;</span>
														</button>
													</div>
													<div class="modal-body">
													<!-- Normal Password Change Form -->
													<form id="changePasswordForm" class="form">
														<div id="normalPasswordChange">
															<div class="form-group">
																<label  class="pl-4" for="currentPasswordChange">Current Password</label>
																<input type="password" id="currentPasswordChange" class="form-control" required>
															</div>
															<div class="form-group">
																<label  class="pl-4" for="newPasswordChange">New Password</label>
																<input type="password" id="newPasswordChange" class="form-control" required>
															</div>
															<div class="form-group">
																<label  class="pl-4" for="confirmPasswordChange">Confirm New Password</label>
																<input type="password" id="confirmPasswordChange" class="form-control" required>
															</div>
														</div>
													</form>


														<!-- Forgot Password Flow -->
														<div id="forgotPasswordSection" style="display:none;">
															<!-- Step 1: Email Entry -->
															<form id="forgotPasswordForm" class="form">
																<div class="form-group">
																	<label  class="pl-4" for="forgotEmail">Email</label>
																	<input type="email" id="forgotEmail"
																		class="form-control"
																		placeholder="Enter your email" required>
																</div>
																<button type="button" id="sendOTPButton"
																	class="btn btn-primary">Send OTP</button>
															</form>

															<!-- Step 2: OTP Entry and New Password -->
															<form id="otpForm" class="form mt-3" style="display:none;">
																<div class="form-group">
																	<label for="otpCode">Enter OTP</label>
																	<input type="text" id="otpCode" class="form-control"
																		placeholder="Enter the OTP" required>
																</div>
																<div class="form-group">
																	<label  class="pl-4" for="newPasswordForgot">New Password</label>
																	<input type="password" id="newPasswordForgot"
																		class="form-control"
																		placeholder="Enter your new password" required>
																</div>
																<button type="button" id="verifyOTPButton"
																	class="btn btn-success">Verify OTP & Reset
																	Password</button>
															</form>
														</div>
													</div>

													<div class="modal-footer">
														<button type="button" class="btn btn-secondary"
															data-dismiss="modal">Close</button>
														<button type="button" id="savePasswordChanges"
															class="btn btn-primary">Change Password</button>
														<button type="button" id="toggleForgotPassword"
															class="btn btn-link">Forgot Password?</button>
													</div>
												</div>
											</div>
										</div>
									</div>



								</div>
							</div>
						</div>
					</div>
				</div>
			</main>

			<footer class="footer">
				<div class="footer-middle">
					<div class="container">
						<div class="row">
							<div class="col-sm-6 col-lg-3">
								<div class="widget widget-about">
									<img src="/images/demos/demo-4/logo.png" class="footer-logo" alt="Footer Logo"
										width="105" height="25">
									<p>Praesent dapibus, neque id cursus ucibus, tortor neque egestas augue, eu
										vulputate magna eros eu erat.</p>
									<div class="social-icons">
										<a href="#" class="social-icon" target="_blank" title="Facebook"><i
												class="icon-facebook-f"></i></a>
										<a href="#" class="social-icon" target="_blank" title="Twitter"><i
												class="icon-twitter"></i></a>
										<a href="#" class="social-icon" target="_blank" title="Instagram"><i
												class="icon-instagram"></i></a>
										<a href="#" class="social-icon" target="_blank" title="Youtube"><i
												class="icon-youtube"></i></a>
										<a href="#" class="social-icon" target="_blank" title="Pinterest"><i
												class="icon-pinterest"></i></a>
									</div>
								</div>
							</div>
							<div class="col-sm-6 col-lg-3">
								<div class="widget">
									<h4 class="widget-title">Useful Links</h4>
									<ul class="widget-list">
										<li><a href="about.html">About JOLT</a></li>
										<li><a href="#">How to shop on JOLT</a></li>
										<li><a href="#">FAQ</a></li>
										<li><a href="contact.html">Contact us</a></li>
										<li><a href="login.html">Log in</a></li>
									</ul>
								</div>
							</div>
							<div class="col-sm-6 col-lg-3">
								<div class="widget">
									<h4 class="widget-title">Customer Service</h4>
									<ul class="widget-list">
										<li><a href="#">Payment Methods</a></li>
										<li><a href="#">Money-back guarantee!</a></li>
										<li><a href="#">Returns</a></li>
										<li><a href="#">Shipping</a></li>
										<li><a href="#">Terms and conditions</a></li>
										<li><a href="#">Privacy Policy</a></li>
									</ul>
								</div>
							</div>
							<div class="col-sm-6 col-lg-3">
								<div class="widget">
									<h4 class="widget-title">My Account</h4>
									<ul class="widget-list">
										<li><a href="#">Sign In</a></li>
										<li><a href="cart.html">View Cart</a></li>
										<li><a href="#">My Wishlist</a></li>
										<li><a href="#">Track My Order</a></li>
										<li><a href="#">Help</a></li>
									</ul>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="footer-bottom">
					<div class="container">
						<p class="footer-copyright">Copyright © 2019 Molla Store. All Rights Reserved.</p>
						<figure class="footer-payments">
							<img src="/images/payments.png" alt="Payment methods" width="272" height="20">
						</figure>
					</div>
				</div>
			</footer>
		</div>


		<!-- Add/Edit Address Modal -->
		<div class="modal fade" id="addressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
			<div class="modal-dialog modal-lg">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="addressModalLabel">Add New Address</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<form id="addressForm" method="POST" action="/user/address/add">
							<div class="mb-3">
								<label for="fullName" class="form-label">Full Name</label>
								<input type="text" name="fullName" class="form-control" id="fullName"
									placeholder="Enter your full name" required>
							</div>
							<div class="mb-3">
								<label for="streetAddress" class="form-label">Street Address</label>
								<input type="text" name="streetAddress" class="form-control" id="streetAddress"
									placeholder="Enter your street address" required>
							</div>
							<div class="mb-3">
								<label for="city" class="form-label">City</label>
								<input type="text" name="city" class="form-control" id="city"
									placeholder="Enter your city" required>
							</div>
							<div class="mb-3">
								<label for="state" class="form-label">State</label>
								<input type="text" name="state" class="form-control" id="state"
									placeholder="Enter your state" required>
							</div>
							<div class="mb-3">
								<label for="zipCode" class="form-label">Zip Code</label>
								<input type="text" name="zipCode" class="form-control" id="zipCode"
									placeholder="Enter your zip code" required>
							</div>
							<div class="mb-3">
								<label for="country" class="form-label">Country</label>
								<input type="text" name="country" class="form-control" id="country"
									placeholder="Enter your country" required>
							</div>
							<div class="mb-3">
								<label for="phone" class="form-label">Phone</label>
								<input type="text" name="phone" class="form-control" id="phone"
									placeholder="Enter your phone number" required>
							</div>
							<input type="hidden" name="addressId" id="addressId">
							<button type="submit" class="btn btn-primary">Save Address</button>
						</form>
					</div>
				</div>
			</div>
		</div>
		<button id="scroll-top" title="Back to Top"><i class="icon-arrow-up"></i></button>

		<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
		<script src="/js/jquery.min.js"></script>
		<script src="/js/bootstrap.bundle.min.js"></script>
		<script src="/js/jquery.hoverIntent.min.js"></script>
		<script src="/js/jquery.waypoints.min.js"></script>
		<script src="/js/superfish.min.js"></script>
		<script src="/js/owl.carousel.min.js"></script>
		<script src="/js/main.js"></script>
		<!-- address script -->


		<script>
			document.getElementById('toggle-add-address').addEventListener('click', function () {
				document.getElementById('addressForm').reset(); // Reset form fields
				document.getElementById('addressId').value = ''; // Clear hidden ID field
				document.getElementById('addressModalLabel').innerText = 'Add New Address';
				$('#addressModal').modal('show'); // Show the modal
			});

			function openEditModal(id, addressString) {
				const address = JSON.parse(addressString);
				document.querySelector('input[name="fullName"]').value = address.fullName;
				document.querySelector('input[name="streetAddress"]').value = address.streetAddress;
				document.querySelector('input[name="city"]').value = address.city;
				document.querySelector('input[name="state"]').value = address.state;
				document.querySelector('input[name="zipCode"]').value = address.zipCode;
				document.querySelector('input[name="country"]').value = address.country;
				document.querySelector('input[name="phone"]').value = address.phone;
				document.getElementById('addressId').value = id; // Set the hidden ID field
				document.getElementById('addressModalLabel').innerText = 'Edit Address';
				$('#addressModal').modal('show'); // Show the modal
			}

			// Save address function to handle both add and edit
			document.getElementById('addressForm').addEventListener('submit', function (event) {
				event.preventDefault(); // Prevent default form submission

				const formData = new FormData(this);
				const addressId = document.getElementById('addressId').value;

				// Set the correct action URL based on whether we are editing or adding
				const actionUrl = addressId ? `/user/address/edit/${addressId}` : '/user/address/add';

				const data = {};
				formData.forEach((value, key) => {
					data[key] = value;
				});

				fetch(actionUrl, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(data),
				})
					.then(response => {
						if (response.ok) {
							// Change message based on whether it's an update or new address
							const message = addressId ? "Address updated successfully!" : "Address added successfully!";
							swal("Success!", message, "success").then(() => {
								location.reload(); // Refresh to see the updated addresses
							});
						} else {
							swal("Error!", "Failed to save address.", "error");
						}
					})
					.catch(error => {
						console.error('Error:', error);
						swal("Error!", "An error occurred while saving the address.", "error");
					});
			});



			function deleteAddress(addressId) {
				Swal.fire({
					title: 'Are you sure?',
					text: 'This action cannot be undone!',
					icon: 'warning',
					showCancelButton: true,
					confirmButtonText: 'Yes, delete it!',
					cancelButtonText: 'No, cancel!'
				}).then(async (result) => {
					if (result.isConfirmed) {
						try {
							const response = await fetch(`/user/address/delete/${addressId}`, {
								method: 'DELETE',
							});

							if (response.ok) {
								Swal.fire('Deleted!', 'The address has been deleted.', 'success').then(() => {
									location.reload();
								});
							} else {
								Swal.fire('Error!', 'Failed to delete address.', 'error');
							}
						} catch (error) {
							console.error('Error:', error);
							Swal.fire('Error!', 'Something went wrong.', 'error');
						}
					}
				});
			}
		</script>

		<!-- profile script -->
		<script>
			// Edit Profile Modal - Open and Save Changes
			document.getElementById('openProfileModal').addEventListener('click', function () {
				$('#editProfileModal').modal('show');
			});
			document.getElementById('saveProfileChanges').addEventListener('click', function () {
    const name = document.getElementById('editName').value;
    const email = document.getElementById('editEmail').value;

    fetch('/profile/profile/edit', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ name, email }),
    })
    .then(response => {
        if (response.ok) {
            return response.json(); // Parse JSON response only if OK
        } else {
            return response.json().then(err => {
                throw new Error(err.message); // Throw error with specific message
            });
        }
    })
    .then(data => {
        swal("Profile Updated!", data.message, "success")
            .then(() => {
                location.reload();
            });
    })
    .catch(error => {
        console.error('Error:', error);
        swal("Error!", error.message || "An error occurred while updating your profile.", "error");
    });
});

			// Change Password Modal - Save New Password
			document.getElementById('savePasswordChanges').addEventListener('click', function () {
    const currentPassword = document.getElementById('currentPasswordChange').value.trim();
    const newPassword = document.getElementById('newPasswordChange').value.trim();
    const confirmPassword = document.getElementById('confirmPasswordChange').value.trim();

    // Check if any field is empty
    if (!currentPassword || !newPassword || !confirmPassword) {
        swal("Error!", "Please fill in all fields.", "error");
        return;
    }

    // Check if new password and confirm password match
    if (newPassword !== confirmPassword) {
        swal("Error!", "New password and confirm password do not match.", "error");
        return;
    }

    // Send the fetch request to update password
    fetch('/profile/password/change', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ currentPassword, newPassword }),
    })
    .then(response => response.json().then(data => ({ status: response.status, body: data })))
    .then(({ status, body }) => {
        if (status === 200) {
            swal("Password Changed!", "Your password has been successfully changed.", "success")
                .then(() => {
                    $('#changePasswordModal').modal('hide'); // Hide the modal if using Bootstrap
                });
        } else {
            swal("Error!", body.message || "Failed to change password. Please check your current password.", "error");
        }
    })
    .catch(error => {
        console.error('Error:', error);
        swal("Error!", "An error occurred while changing your password.", "error");
    });
});


			// Send OTP for Forgot Password
			document.getElementById('toggleForgotPassword').addEventListener('click', function () {
				const normalPasswordChange = document.getElementById('normalPasswordChange');
				const forgotPasswordSection = document.getElementById('forgotPasswordSection');

				if (normalPasswordChange.style.display !== 'none') {
					normalPasswordChange.style.display = 'none';
					forgotPasswordSection.style.display = 'block';
				} else {
					normalPasswordChange.style.display = 'block';
					forgotPasswordSection.style.display = 'none';
				}
			});

			// Send OTP
			document.getElementById('sendOTPButton').addEventListener('click', function () {
				const email = document.getElementById('forgotEmail').value.trim();

				if (!email) {
					swal("Error!", "Please enter your email.", "error");
					return;
				}


				fetch('/profile/send-otp', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					},
					body: JSON.stringify({ email }),
				})
					.then(response => {
						if (response.ok) {
							swal("Success!", "OTP has been sent to your email.", "success");
							document.getElementById('otpForm').style.display = 'block'; // Show OTP form
						} else {
							return response.json().then(data => {
								swal("Error!", data.message || "Failed to send OTP. Please check your email.", "error");
							});
						}
					})
					.catch(error => {
						console.error('Error:', error);
						swal("Error!", "An error occurred while sending OTP.", "error");
					});
			});

			// Verify OTP and reset password
			document.getElementById('verifyOTPButton').addEventListener('click', function () {
				const otpCode = document.getElementById('otpCode').value.trim(); // Changed from otp to otpCode
				const newPassword = document.getElementById('newPasswordForgot').value.trim();

				if (!otpCode || !newPassword) {
					swal("Error!", "Please enter both OTP and new password.", "error");
					return;
				}

				fetch('/profile/password/reset', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					},
					body: JSON.stringify({ otpCode, newPassword }), // Send otpCode instead of otp
				})
					.then(response => response.json().then(data => ({ status: response.status, body: data })))
					.then(({ status, body }) => {
						if (status === 200) {
							swal("Success!", "Your password has been reset.", "success")
								.then(() => {
									$('#changePasswordModal').modal('hide');
								});
						} else {
							swal("Error!", body.message || "Failed to reset password. Please check the OTP.", "error");
						}
					})
					.catch(error => {
						console.error('Error:', error);
						swal("Error!", "An error occurred while resetting your password.", "error");
					});
			});

		</script>



		<script>

			async function cancelOrder(event, orderId) {
				event.preventDefault(); // Prevent default form submission behavior

				const confirmation = await Swal.fire({
					title: 'Are you sure?',
					text: 'You won\'t be able to revert this!',
					icon: 'warning',
					showCancelButton: true,
					confirmButtonColor: '#3085d6',
					cancelButtonColor: '#d33',
					confirmButtonText: 'Yes, cancel it!'
				});

				if (!confirmation.isConfirmed) {
					return; // If the user doesn't confirm, stop further execution
				}

				try {
					const response = await fetch(`/api/cart/cancel/${orderId}`, {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json'
						}
					});

					if (response.ok) {
						Swal.fire({
							icon: 'success',
							title: 'Cancelled!',
							text: 'Your order has been cancelled.',
							confirmButtonText: 'OK'
						}).then(() => {
							window.location.reload(); // Refresh the page to update the order status
						});
					} else {
						const data = await response.json();
						Swal.fire({
							icon: 'error',
							title: 'Failed to cancel',
							text: data.message || 'Unable to cancel the order. Please try again later.',
							confirmButtonText: 'OK'
						});
					}
				} catch (error) {
					console.error('Error cancelling the order:', error);
					Swal.fire({
						icon: 'error',
						title: 'Error',
						text: 'An error occurred while cancelling the order. Please try again later.',
						confirmButtonText: 'OK'
					});
				}
			}

		</script>



		<script>
			
			document.addEventListener('DOMContentLoaded', function () {
    // Select all toggle details buttons
    const detailButtons = document.querySelectorAll('.toggle-details-btn');

    // Add click event to each button
    detailButtons.forEach(button => {
        button.addEventListener('click', function () {
            // Get the corresponding details row ID
            const orderId = button.getAttribute('data-order-id');
            const detailsRow = document.getElementById(`details-${orderId}`);

            // Use getComputedStyle to check the current display property
            const currentDisplay = window.getComputedStyle(detailsRow).display;

            // Toggle the visibility of the details row
            if (currentDisplay === 'none') {
                detailsRow.style.display = 'table-row';
            } else {
                detailsRow.style.display = 'none';
            }
        });
    });
});

		</script>


		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>


		</body>

		</html>